name: doc
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true
on:  # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@main
        with:
          qt: true
      - name: Install linux dependencies
        run: |
          sudo apt update
          sudo apt install -y optipng
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Install package
        run: uv pip install --quiet --system .[doc]
      - name: Display system information
        run: meg-wiki sys-info --developer
      - name: Get testing dataset version
        run: curl https://raw.githubusercontent.com/fcbg-platforms/meg-wiki-datasets/main/version.txt -o meg_wiki_datasets_version.txt
      - name: Cache dataset
        id: cache
        uses: actions/cache@v4
        with:
          key: meg-wiki-${{ runner.os }}-${{ hashFiles('meg_wiki_datasets_version.txt') }}
          path: ~/meg-wiki_data
      - name: Cache MNE dataset
        id: cache_mne
        uses: actions/cache@v4
        with:
          key: mne-${{ runner.os }}
          path: ~/mne_data
      - name: Download testing dataset
        if: steps.cache.outputs.cache-hit != 'true'
        run: python -c "from meg_wiki.datasets import sample; sample.data_path()"
      - name: Download MNE datasets
        if: steps.cache_mne.outputs.cache-hit != 'true'
        run: python -c "from mne.datasets import fetch_fsaverage; fetch_fsaverage()"
      - name: Remove dataset version file
        run: rm meg_wiki_datasets_version.txt
      - name: Build doc
        run: make -C doc html
        env:
          MNE_3D_OPTION_MULTI_SAMPLES: 1
      - name: Prune sphinx environment
        run: rm -R ./doc/_build/html/.doctrees
      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: doc-dev
          path: ./doc/_build/html

  deploy:
    if: github.event_name == 'push'
    needs: build
    timeout-minutes: 10
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download documentation
        uses: actions/download-artifact@v4
        with:
          name: doc-dev
          path: ./doc-dev
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./doc-dev
          target-folder: .
          git-config-name: 'github-actions[bot]'
          git-config-email: 'github-actions[bot]@users.noreply.github.com'
          single-commit: true
          force: true
          clean: true
          clean-exclude: |
            CNAME
            .nojekyll
            .gitignore
