name: pytest
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true
on:  # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * 1'

jobs:
  pytest:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    name: ${{ matrix.os }} - py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Install package
        run: uv pip install --quiet --system .[test]
      - name: Display system information
        run: meg-wiki sys-info --developer
      - name: Get testing dataset version
        run: |
          curl https://raw.githubusercontent.com/fcbg-platforms/meg-wiki-datasets/main/version.txt -o meg_wiki_datasets_version.txt
      - name: Cache dataset
        id: cache
        uses: actions/cache@v4
        with:
          key: meg-wiki-${{ runner.os }}-${{ hashFiles('meg_wiki_datasets_version.txt') }}
          path: ~/meg-wiki_data
      - name: Download testing dataset
        if: steps.cache.outputs.cache-hit != 'true'
        run: python -c "import meg_wiki; meg_wiki.datasets.sample.data_path()"
      - name: Remove dataset version file
        run: rm meg_wiki_datasets_version.txt
      - name: Run pytest
        run: pytest meg_wiki --cov=meg_wiki --cov-report=xml --cov-config=pyproject.toml
      - name: Upload to codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests  # optional
          name: codecov-umbrella  # optional
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true  # optional (default = false)

  pytest-pip-pre:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
    name: pip pre-release - py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Install package
        run: |
          uv pip install --quiet --system .[test]
          uv pip install --quiet --system --upgrade git+https://github.com/mne-tools/mne-python
          uv pip install --quiet --system matplotlib
          uv pip install --quiet --system --upgrade --prerelease allow --only-binary :all: -i https://pypi.anaconda.org/scientific-python-nightly-wheels/simple --no-deps matplotlib
          uv pip install --quiet --system --upgrade --prerelease allow --only-binary :all: -i https://pypi.anaconda.org/scientific-python-nightly-wheels/simple numpy scipy
      - name: Display system information
        run: meg-wiki sys-info --developer
      - name: Get testing dataset version
        run: |
          curl https://raw.githubusercontent.com/fcbg-platforms/meg-wiki-datasets/main/version.txt -o meg_wiki_datasets_version.txt
      - name: Cache dataset
        id: cache
        uses: actions/cache@v4
        with:
          key: meg-wiki-${{ runner.os }}-${{ hashFiles('meg_wiki_datasets_version.txt') }}
          path: ~/meg-wiki_data
      - name: Download testing dataset
        if: steps.cache.outputs.cache-hit != 'true'
        run: python -c "import meg_wiki; meg_wiki.datasets.sample.data_path()"
      - name: Remove dataset version file
        run: rm meg_wiki_datasets_version.txt
      - name: Run pytest
        run: pytest meg_wiki --cov=meg_wiki --cov-report=xml --cov-config=pyproject.toml
      - name: Upload to codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests  # optional
          name: codecov-umbrella  # optional
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true  # optional (default = false)
